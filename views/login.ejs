<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - Lumi Discord Bot</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
</head>
<body class="bg-gradient-to-br from-gray-900 via-purple-900 to-violet-900 min-h-screen">

<section class="min-h-screen flex items-center justify-center py-12">
    <div class="max-w-md mx-auto px-4 sm:px-6 lg:px-8">
        <div class="bg-white/10 backdrop-blur-lg border border-white/20 rounded-2xl p-8">
            <!-- Logo -->
            <div class="text-center mb-8">
                <div class="w-20 h-20 bg-gradient-to-r from-purple-500 to-violet-500 rounded-full flex items-center justify-center mx-auto mb-4">
                    <img src="/images/lumi-avatar.png" alt="Lumi" class="w-16 h-16 rounded-full" onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                    <i class="fas fa-robot text-white text-2xl" style="display: none;"></i>
                </div>
                <h1 class="text-2xl font-bold text-white mb-2">Entrar na Lumi</h1>
                <p class="text-white/60 text-sm">Faça login com sua conta Discord</p>
            </div>

            <!-- Discord Login Button -->
            <div class="space-y-4">
                <button onclick="loginWithDiscord()" 
                        class="w-full bg-[#5865F2] hover:bg-[#4752C4] text-white px-6 py-4 rounded-xl font-semibold transition-all flex items-center justify-center space-x-3">
                    <i class="fab fa-discord text-xl"></i>
                    <span>Continuar com Discord</span>
                </button>
                
                <!-- Status Messages -->
                <div id="status-message" class="hidden text-center text-sm"></div>
                
                <!-- Alternative Actions -->
                <div class="text-center space-y-2">
                    <p class="text-white/40 text-xs">Não tem conta Discord?</p>
                    <a href="https://discord.com/register" target="_blank" 
                       class="text-purple-300 hover:text-purple-200 text-sm font-medium">
                        Criar conta no Discord
                    </a>
                </div>
            </div>

            <!-- Error Display -->
            <div id="error-display" class="hidden mt-4 p-3 bg-red-500/20 border border-red-500/30 rounded-lg">
                <div class="flex items-center space-x-2">
                    <i class="fas fa-exclamation-triangle text-red-300"></i>
                    <span class="text-red-200 text-sm" id="error-text"></span>
                </div>
            </div>

            <!-- Success Display -->
            <div id="success-display" class="hidden mt-4 p-3 bg-green-500/20 border border-green-500/30 rounded-lg">
                <div class="flex items-center space-x-2">
                    <i class="fas fa-check-circle text-green-300"></i>
                    <span class="text-green-200 text-sm" id="success-text"></span>
                </div>
            </div>

            <!-- Footer -->
            <div class="mt-8 text-center">
                <a href="/" class="text-white/60 hover:text-white/80 text-sm transition-colors">
                    <i class="fas fa-arrow-left mr-1"></i>
                    Voltar ao início
                </a>
            </div>
        </div>
    </div>
</section>

<script>
function showStatus(message, type = 'info') {
    const statusEl = document.getElementById('status-message');
    const errorEl = document.getElementById('error-display');
    const successEl = document.getElementById('success-display');
    
    // Hide all
    statusEl.classList.add('hidden');
    errorEl.classList.add('hidden');
    successEl.classList.add('hidden');
    
    if (type === 'error') {
        document.getElementById('error-text').textContent = message;
        errorEl.classList.remove('hidden');
    } else if (type === 'success') {
        document.getElementById('success-text').textContent = message;
        successEl.classList.remove('hidden');
    } else {
        statusEl.textContent = message;
        statusEl.classList.remove('hidden');
        statusEl.className = 'text-center text-sm text-white/60';
    }
}

function loginWithDiscord() {
    try {
        showStatus('Redirecionando para o Discord...', 'info');
        
        // Construir URL de redirect dinâmica
        const currentDomain = window.location.origin;
        const returnTo = new URLSearchParams(window.location.search).get('returnTo') || '/dashboard';
        
        // Redirecionar para OAuth do Discord
        window.location.href = `/auth/discord?returnTo=${encodeURIComponent(returnTo)}`;
        
    } catch (error) {
        console.error('Erro no login:', error);
        showStatus('Erro ao iniciar login. Tente novamente.', 'error');
    }
}

// Check for URL parameters on load
window.addEventListener('DOMContentLoaded', function() {
    const urlParams = new URLSearchParams(window.location.search);
    
    if (urlParams.get('error')) {
        showStatus('Erro na autenticação. Verifique suas permissões.', 'error');
    }
    
    if (urlParams.get('expired')) {
        showStatus('Sessão expirou. Faça login novamente.', 'error');
    }
    
    if (urlParams.get('success')) {
        showStatus('Login realizado com sucesso! Redirecionando...', 'success');
        setTimeout(() => {
            window.location.href = urlParams.get('returnTo') || '/dashboard';
        }, 2000);
    }
});
</script>

</body>
</html>